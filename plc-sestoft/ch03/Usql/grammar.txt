Grammar for micro-SQL, very simple SQL SELECT statements
--------------------------------------------------------

Lexical matters: tokens and comments
------------------------------------

NAME:       ['a'-'z''A'-'Z']['a'-'z''A'-'Z''0'-'9''_']*

            Except for the keywords, which are:  and, false, from, not, or, select, true

            Keywords and identifiers may be written in lower case or
            upper case, but are converted to lower case.

            Also, in true SQL style, identifiers may be enclosed in
            double quotes:

            '"' ['a'-'z''A'-'Z''_']['a'-'z''A'-'Z''_''0'-'9'' ']* '"'

CSTINT:     -?[0-9]+

CSTBOOL:    false | true

CSTSTRING:  ' any characters and embedded quotes '' even '

OP:         + - * / % = <> < <= > >=

Comments:
            -- this comment extends to the end of


Grammar
-------

<stmt> ::=                                   program
        select <exprs_1> from <names_1>

<expr> ::=
        *                                   star (all fields)
        <column>                            a single column from a table
        NAME ( <exprs> )                    function application
        <const>                             constant literal
        ( <expr> )                          parenthesized expression
        not <expr>                          logical negation
        <expr> OP <expr>                    arithmetic, comparison

<column> ::=
	  NAME                              column name
	  NAME . NAME                       qualified name

<exprs> ::=
                                            no expressions
          <exprs_1>                         at least one expression

<exprs_1> ::=                               comma-separated expression list
           <expr>
           <expr> ,  <exprs_1>

<names_1> ::=                               comma-separated name list
           NAME
           NAME ,  names_1

<const> ::=                                  constant literals
         <CSTINT>                            integer literal
         <CSTBOOL>                           boolean literal
         <CSTSTRING>                         string literal

Examples:
    SELECT name, zip FROM Person
    SELECT COUNT(*) FROM Person
    SELECT * FROM Person, Zip
    SELECT Person.name, Zip.code FROM Person, Zip
